<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>재평가 설문</title>
  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js/dist/umd/supabase.min.js"></script>
  <script src="./js/supabase.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 600px;
      margin: 50px auto;
      text-align: center;
      line-height: 1.8;
    }
    .client-list {
      margin-top: 20px;
    }
    .client-item {
      padding: 10px;
      border: 1px solid #ccc;
      margin: 10px 0;
      cursor: pointer;
      border-radius: 5px;
    }
    .client-item:hover {
      background-color: #f4f4f4;
    }
    button {
      display: block;
      width: 100%;
      padding: 10px;
      font-size: 1.2rem;
      margin-top: 20px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>재평가 설문</h1>
  <p>설문할 회원을 선택하세요:</p>
  <div class="client-list" id="clientList">
    <!-- 평가한 회원 목록이 여기에 추가됩니다 -->
  </div>
  <button id="backToDashboard">관리자 홈으로 돌아가기</button>

  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      const session = await getSession();
      if (!session) {
        alert("로그인이 필요합니다.");
        window.location.href = "index.html";
        return;
      }

      const userId = session.user.id;

      // Supabase RPC 호출
      const { data, error } = await supabase.rpc("get_latest_assessments", { user_id_param: userId });

      if (error) {
        console.error("그룹화된 데이터 가져오기 실패:", error.message);
        alert("데이터를 가져오는 중 오류가 발생했습니다.");
        return;
      }

      if (!data || data.length === 0) {
        document.getElementById("clientList").innerHTML = "<p>등록된 평가 회원이 없습니다.</p>";
        return;
      }

      // 그룹화된 데이터 렌더링
      const clientList = document.getElementById("clientList");
      clientList.innerHTML = ""; // 기존 내용을 초기화
      data.forEach(({ client_name, latest_date }) => {
        const clientItem = document.createElement("div");
        clientItem.className = "client-item";
        clientItem.innerHTML = `<strong>${client_name}</strong> (최근 평가: ${new Date(latest_date).toLocaleDateString()})`;
        clientItem.addEventListener("click", () => {
          // 회원 이름을 URL 파라미터로 전달하며 설문 페이지로 이동
          window.location.href = `dashboard.html?client=${encodeURIComponent(client_name)}`;
        });
        clientList.appendChild(clientItem);
      });
    });

    // 관리자 홈으로 돌아가기 버튼
    document.getElementById("backToDashboard").addEventListener("click", () => {
      window.location.href = "dashboard_home.html";
    });
  </script>
</body>
</html>
